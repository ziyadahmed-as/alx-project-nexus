# Generated by Django 5.2.4 on 2025-07-29 16:30

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='phone number')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('CUSTOMER', 'Customer'), ('VENDOR', 'Vendor'), ('GUEST', 'Guest')], default='GUEST', max_length=20, verbose_name='role')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last updated')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='admin_profile', serialize=False, to='Users.user')),
                ('access_level', models.CharField(choices=[('SUPER', 'Super Admin'), ('MOD', 'Moderator'), ('SUPPORT', 'Support Staff')], default='SUPPORT', max_length=20, verbose_name='access level')),
                ('notes', models.TextField(blank=True, verbose_name='admin notes')),
            ],
            options={
                'verbose_name': 'admin profile',
                'verbose_name_plural': 'admin profiles',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customer', serialize=False, to='Users.user')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='last name')),
                ('location_lat', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('location_long', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('device_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='device ID')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='vendor', serialize=False, to='Users.user')),
                ('store_name', models.CharField(max_length=100, verbose_name='store name')),
                ('store_logo', models.ImageField(upload_to='vendor_logos/', verbose_name='store logo')),
                ('store_description', models.TextField(verbose_name='store description')),
                ('shipping_policy', models.TextField(verbose_name='shipping policy')),
                ('return_policy', models.TextField(verbose_name='return policy')),
                ('is_approved', models.BooleanField(default=False, verbose_name='approved status')),
                ('store_rating', models.FloatField(default=0.0, verbose_name='store rating')),
            ],
            options={
                'verbose_name': 'vendor',
                'verbose_name_plural': 'vendors',
                'ordering': ['-is_approved', 'store_name'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(choices=[('HOME', 'Home'), ('WORK', 'Work'), ('OTHER', 'Other')], max_length=10, verbose_name='address label')),
                ('street', models.CharField(max_length=255, verbose_name='street address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('region', models.CharField(max_length=100, verbose_name='region/state')),
                ('country', models.CharField(max_length=100, verbose_name='country')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('phone_number', models.CharField(max_length=20, verbose_name='contact phone')),
                ('is_default', models.BooleanField(default=False, verbose_name='default address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='Users.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': ['-is_default', 'user', 'label'],
            },
        ),
        migrations.CreateModel(
            name='VendorEmployee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('MANAGER', 'Manager'), ('STAFF', 'Staff'), ('CS', 'Customer Service')], max_length=20, verbose_name='employee role')),
                ('permissions', models.JSONField(default=dict, verbose_name='permissions')),
                ('is_active', models.BooleanField(default=True, verbose_name='active status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_employees', to='Users.user', verbose_name='user')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='Users.vendor', verbose_name='vendor')),
            ],
            options={
                'verbose_name': 'vendor employee',
                'verbose_name_plural': 'vendor employees',
                'ordering': ['vendor', '-is_active', 'role'],
                'unique_together': {('user', 'vendor')},
            },
        ),
    ]
